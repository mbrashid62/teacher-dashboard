{"version":3,"sources":["actions/examEntry.js","reducers/index.js","reducers/app.js","reducers/examEntries.js","components/StudentInput.jsx","components/EntryList.jsx","components/Stats.jsx","App.js","serviceWorker.js","index.js","store/index.js"],"names":["EXAM_ENTRY_ACTION_TYPES","combineReducers","app","state","arguments","length","undefined","isSetup","examEntries","action","type","Object","objectSpread","defineProperty","payload","id","data","reject","item","KEY_CODES","ENTER","StudentInput","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","nameInputRef","gradInputRef","name","grade","number","onStudentSubmitAttempt","isValidInput","createStudent","showError","onNameType","e","keyCode","setState","target","value","onKeyDown","onGradeChange","parseInt","props","dispatchCreateExamEntry","resetInput","console","log","inherits","createClass","key","_this2","react_default","a","createElement","className","ref","placeholder","min","max","onChange","onClick","disabled","Component","displayName","connect","EntryList","onDeleteClick","dispatchDeleteEntry","entries","_","map","entry","i","cn","failing","defaultProps","Stats","_React$Component","mean","getComputedStats","scores","count","lowest","highest","Math","round","prevProps","prevState","prevContext","values","React","App","src_components_StudentInput","src_components_EntryList","components_Stats","Boolean","window","location","hostname","match","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d38657ed.chunk.js","sourcesContent":["export const EXAM_ENTRY_ACTION_TYPES = {\n  CREATE: 'CREATE_EXAM_ENTRY',\n  UPDATE: 'UPDATE_EXAM_ENTRY',\n  DELETE: 'DELETE_EXAM_ENTRY',\n};\n\nexport const create = (id, data) => {\n  return {\n    type: EXAM_ENTRY_ACTION_TYPES.CREATE,\n    payload: {\n      id,\n      data,\n    },\n  };\n};\n\nexport const update = () => {\n  return {\n    type: '',\n    payload: '',\n  };\n};\n\nexport const remove = id => {\n  return {\n    type: EXAM_ENTRY_ACTION_TYPES.DELETE,\n    payload: { id },\n  };\n};\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport exams from './examEntries';\n\nexport default combineReducers({\n  app,\n  examEntries: exams,\n});\n","export default function(\n  state = {\n    isSetup: true,\n  },\n  action\n) {\n  return state;\n}\n","import { reject } from 'lodash';\nimport { EXAM_ENTRY_ACTION_TYPES } from '../actions/examEntry';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case EXAM_ENTRY_ACTION_TYPES.CREATE:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...action.payload.data,\n          id: action.payload.id,\n        },\n      };\n    case EXAM_ENTRY_ACTION_TYPES.DELETE:\n      return {\n        ...reject(state, item => item.id === action.payload.id),\n      };\n    default:\n      return state;\n  }\n}\n","import React, { Component } from 'react';\nimport './StudentInput.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { create as createExamEntry } from '../actions/examEntry';\n\nconst KEY_CODES = {\n  ENTER: 13,\n};\n\nexport class StudentInput extends Component {\n\n  static displayName = 'src/components/StudentInput';\n\n  static propTypes = {\n    dispatchCreateExamEntry: PropTypes.func.isRequired,\n  };\n\n  nameInputRef = null;\n\n  gradInputRef = null;\n\n  state = {\n    name: '',\n    grade: null,\n    number: 1,\n  };\n\n  onStudentSubmitAttempt = () => {\n    this.isValidInput() ? this.createStudent() : this.showError();\n  };\n\n  onNameType = (e) => {\n    if (e.keyCode === KEY_CODES.ENTER) {\n      this.onStudentSubmitAttempt();\n    }\n    this.setState({ name: e.target.value });\n  };\n\n  onKeyDown = (e) => {\n    if (e.keyCode === KEY_CODES.ENTER) {\n      this.onStudentSubmitAttempt();\n    }\n  };\n\n  onGradeChange = (e) => {\n    const grade = parseInt(e.target.value);\n    if (grade < 0 || grade > 100) {\n      this.gradInputRef.value = this.state.grade;\n    } else {\n      this.setState({ grade });\n    }\n  };\n\n  // TODO: define more input validity rules instead of just a simple truthy check\n  isValidInput = () => this.state.grade && this.state.name;\n\n  createStudent = () => {\n    this.props.dispatchCreateExamEntry(this.state.number, {\n      name: this.state.name,\n      grade: this.state.grade,\n    });\n\n    this.resetInput();\n  };\n\n  showError = () => {\n    console.log('Error!');\n  };\n\n  resetInput = () => {\n    this.setState({\n      name: '',\n      grade: null,\n      number: ++this.state.number,\n    });\n\n    this.nameInputRef.value = '';\n    this.gradInputRef.value = '';\n  };\n\n  render() {\n    return (\n      <div className=\"student-input-container\">\n        <input\n          ref={(ref) => this.nameInputRef = ref}\n          className=\"name-input\"\n          type=\"text\"\n          onKeyDown={this.onNameType}\n          placeholder=\"Joe Smith\"\n        />\n        <input\n          ref={(ref) => this.gradInputRef = ref}\n          className=\"grade-input\"\n          type=\"number\"\n          min=\"0\"\n          max=\"100\"\n          onChange={this.onGradeChange}\n          onKeyDown={this.onKeyDown}\n          placeholder=\"100\"\n        />\n        <button\n          onClick={this.onStudentSubmitAttempt}\n          disabled={!this.isValidInput()}\n        >Enter Grade\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {\n  dispatchCreateExamEntry: createExamEntry,\n})(StudentInput);\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './EntryList.css';\nimport { remove as deleteEntry } from '../actions/examEntry';\n\nexport class EntryList extends Component {\n\n  static displayName = 'src/EntryList';\n\n  static propTypes = {\n    entries: PropTypes.object.isRequired,\n    dispatchDeleteEntry: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    entries: {},\n    dispatchDeleteEntry: () => {},\n  };\n\n  onDeleteClick = (id) => {\n    this.props.dispatchDeleteEntry(id);\n  };\n\n  render() {\n    if (this.props.entries === {}) {\n      return null;\n    }\n\n    return (\n      <div className=\"exam-list\">\n        {_.map(this.props.entries, (entry, i) => (\n          <div\n            className={cn('entry-container', {\n              failing: entry.grade <= 65,\n            })}\n            key={i}\n          >\n            <p>{entry.name}</p>\n            <p>{entry.grade}</p>\n            <p className=\"delete-link\" onClick={() => this.onDeleteClick(entry.id)}>x</p>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  entries: state.examEntries,\n}), ({\n  dispatchDeleteEntry: deleteEntry,\n}))(EntryList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nexport class Stats extends React.Component {\n  static displayName = 'src/components/Stats';\n\n  static propTypes = {\n    entries: PropTypes.object.isRequired,\n  };\n\n  state = {\n    min: 0,\n    max: 0,\n    mean: 0,\n  };\n\n  componentDidUpdate(prevProps, prevState, prevContext) {\n    if (this.props.entries !== prevProps.entries ) {\n      const scores = Object.values(this.props.entries);\n      if (scores.length) {\n        this.setState({ ...this.getComputedStats(scores) });\n      }\n    }\n  }\n\n  getComputedStats = (scores) => {\n    let count  = 0;\n    let lowest = scores[0].grade;\n    let highest = scores[0].grade;\n    for (let i = 0; i < scores.length; i++) {\n      if (scores[i].grade < lowest) {\n        lowest = scores[i].grade;\n      }\n\n      if (scores[i].grade > highest) {\n        highest = scores[i].grade;\n      }\n\n      count += scores[i].grade;\n    }\n\n    return {\n      min: lowest,\n      max: highest,\n      mean: Math.round(count / scores.length),\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"stats-container\">\n        <p>Class Average: {this.state.mean}</p>\n        <p>Lowest Score: {this.state.min}</p>\n        <p>Highest Score: {this.state.max}</p>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  entries: state.examEntries,\n}))(Stats);\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport StudentInput from '../src/components/StudentInput';\nimport EntryList from '../src/components/EntryList';\nimport Stats from '../src/components/Stats';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n          <p className=\"greeting\">Welcome! Enter Grades Below.</p>\n        </header>\n        <StudentInput />\n        <EntryList />\n        <Stats />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '../src/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore({});\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\nexport function configureStore(initialState = {}) {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n}\n"],"sourceRoot":""}