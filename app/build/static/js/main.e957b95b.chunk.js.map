{"version":3,"sources":["actions/examEntry.js","reducers/examEntries.js","reducers/index.js","reducers/app.js","components/StudentInput.jsx","components/EntryList.jsx","components/Stats.jsx","components/EditModal.jsx","App.js","serviceWorker.js","index.js","store/index.js"],"names":["EXAM_ENTRY_ACTION_TYPES","INITIAL_STATE","edit","isOpen","entry","combineReducers","app","state","arguments","length","undefined","isSetup","examEntries","action","type","Object","objectSpread","defineProperty","payload","id","data","reject","item","grade","KEY_CODES","ENTER","StudentInput","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","nameInputRef","gradInputRef","name","number","onStudentSubmitAttempt","isValidInput","createStudent","showError","onNameType","e","keyCode","setState","target","value","onKeyDown","onGradeChange","parseInt","props","dispatchCreateExamEntry","resetInput","console","log","inherits","createClass","key","_this2","react_default","a","createElement","className","ref","placeholder","min","max","onChange","onClick","disabled","Component","displayName","connect","EntryList","onDeleteClick","dispatchDeleteEntry","onGradeClick","dispatchOpenEdit","_","values","entries","map","i","cn","failing","defaultProps","Stats","_React$Component","mean","scores","count","lowest","highest","Math","round","getComputedStats","React","EditModal","gradeToEdit","dispatchCloseModal","App","src_components_StudentInput","src_components_EditModal","src_components_EntryList","components_Stats","Boolean","window","location","hostname","match","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e957b95b.chunk.js","sourcesContent":["export const EXAM_ENTRY_ACTION_TYPES = {\n  CREATE: 'CREATE_EXAM_ENTRY',\n  UPDATE: 'UPDATE_EXAM_ENTRY',\n  DELETE: 'DELETE_EXAM_ENTRY',\n  OPEN_EDIT: 'OPEN_EDIT',\n  CLOSE_EDIT: 'CLOSE_EDIT',\n};\n\nexport const create = (id, data) => {\n  return {\n    type: EXAM_ENTRY_ACTION_TYPES.CREATE,\n    payload: {\n      id,\n      data,\n    },\n  };\n};\n\nexport const update = () => {\n  return {\n    type: '',\n    payload: '',\n  };\n};\n\nexport const openEdit = (id, grade) => {\n  return {\n    type: EXAM_ENTRY_ACTION_TYPES.OPEN_EDIT,\n    payload: {\n      id,\n      grade,\n    },\n  };\n};\n\nexport const closeEdit = () => {\n  return {\n    type: EXAM_ENTRY_ACTION_TYPES.CLOSE_EDIT,\n    payload: {},\n  };\n};\nexport const remove = id => {\n  return {\n    type: EXAM_ENTRY_ACTION_TYPES.DELETE,\n    payload: { id },\n  };\n};\n\n","import { reject } from 'lodash';\nimport { EXAM_ENTRY_ACTION_TYPES } from '../actions/examEntry';\nconst INITIAL_STATE = {\n  edit: {\n    isOpen: false,\n    entry: {},\n  },\n};\n\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case EXAM_ENTRY_ACTION_TYPES.CREATE:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...action.payload.data,\n          id: action.payload.id,\n        },\n      };\n    case EXAM_ENTRY_ACTION_TYPES.DELETE:\n      return {\n        ...reject(state, item => item.id === action.payload.id),\n      };\n    case EXAM_ENTRY_ACTION_TYPES.OPEN_EDIT:\n      return {\n        ...state,\n        edit: {\n          isOpen: true,\n          entry: {\n            id: action.payload.id,\n            grade: action.payload.grade,\n          },\n        },\n      };\n    case EXAM_ENTRY_ACTION_TYPES.CLOSE_EDIT:\n      return {\n        ...state,\n        edit: {\n          isOpen: false,\n          entry: {},\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport exams from './examEntries';\n\nexport default combineReducers({\n  app,\n  examEntries: exams,\n});\n","export default function(\n  state = {\n    isSetup: true,\n  },\n  action\n) {\n  return state;\n}\n","import React, { Component } from 'react';\nimport './StudentInput.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { create as createExamEntry } from '../actions/examEntry';\n\nconst KEY_CODES = {\n  ENTER: 13,\n};\n\nexport class StudentInput extends Component {\n\n  static displayName = 'src/components/StudentInput';\n\n  static propTypes = {\n    dispatchCreateExamEntry: PropTypes.func.isRequired,\n  };\n\n  nameInputRef = null;\n\n  gradInputRef = null;\n\n  state = {\n    name: '',\n    grade: null,\n    number: 1,\n  };\n\n  onStudentSubmitAttempt = () => {\n    this.isValidInput() ? this.createStudent() : this.showError();\n  };\n\n  onNameType = (e) => {\n    if (e.keyCode === KEY_CODES.ENTER) {\n      this.onStudentSubmitAttempt();\n    }\n    this.setState({ name: e.target.value });\n  };\n\n  onKeyDown = (e) => {\n    if (e.keyCode === KEY_CODES.ENTER) {\n      this.onStudentSubmitAttempt();\n    }\n  };\n\n  onGradeChange = (e) => {\n    const grade = parseInt(e.target.value);\n    if (grade < 0 || grade > 100) {\n      this.gradInputRef.value = this.state.grade;\n    } else {\n      this.setState({ grade });\n    }\n  };\n\n  // TODO: define more input validity rules instead of just a simple truthy check\n  isValidInput = () => this.state.grade && this.state.name;\n\n  createStudent = () => {\n    this.props.dispatchCreateExamEntry(this.state.number, {\n      name: this.state.name,\n      grade: this.state.grade,\n    });\n\n    this.resetInput();\n  };\n\n  showError = () => {\n    console.log('Error!');\n  };\n\n  resetInput = () => {\n    this.setState({\n      name: '',\n      grade: null,\n      number: ++this.state.number,\n    });\n\n    this.nameInputRef.value = '';\n    this.gradInputRef.value = '';\n  };\n\n  render() {\n    return (\n      <div className=\"student-input-container\">\n        <input\n          ref={(ref) => this.nameInputRef = ref}\n          className=\"name-input\"\n          type=\"text\"\n          onKeyDown={this.onNameType}\n          placeholder=\"Joe Smith\"\n        />\n        <input\n          ref={(ref) => this.gradInputRef = ref}\n          className=\"grade-input\"\n          type=\"number\"\n          min=\"0\"\n          max=\"100\"\n          onChange={this.onGradeChange}\n          onKeyDown={this.onKeyDown}\n          placeholder=\"100\"\n        />\n        <button\n          onClick={this.onStudentSubmitAttempt}\n          disabled={!this.isValidInput()}\n        >Enter Grade\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {\n  dispatchCreateExamEntry: createExamEntry,\n})(StudentInput);\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './EntryList.css';\nimport {\n  remove as deleteEntry,\n  openEdit,\n} from '../actions/examEntry';\n\nexport class EntryList extends Component {\n\n  static displayName = 'src/EntryList';\n\n  static propTypes = {\n    entries: PropTypes.object.isRequired,\n    dispatchDeleteEntry: PropTypes.func.isRequired,\n    dispatchOpenEdit: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    entries: {},\n    dispatchDeleteEntry: () => {},\n    dispatchOpenEdit: () => {},\n  };\n\n  onDeleteClick = (id) => {\n    this.props.dispatchDeleteEntry(id);\n  };\n\n  onGradeClick = (id, grade) => {\n    this.props.dispatchOpenEdit(id, grade);\n  };\n\n  render() {\n    if (_.values(this.props.entries).length <= 1) {\n      return null;\n    }\n\n    return (\n      <div className=\"exam-list\">\n        {_.map(this.props.entries, (entry, i) => (\n          <div\n            className={cn('entry-container', {\n              failing: entry.grade <= 65,\n            })}\n            key={i}\n          >\n            <p>{entry.name}</p>\n            <p onClick={() => this.onGradeClick(entry.id, entry.grade)}>{entry.grade}</p>\n            <p className=\"delete-link\" onClick={() => this.onDeleteClick(entry.id)}>X</p>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  entries: state.examEntries,\n}), ({\n  dispatchDeleteEntry: deleteEntry,\n  dispatchOpenEdit: openEdit,\n}))(EntryList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst getComputedStats = (scores) => {\n  let count  = 0;\n  let lowest = scores[0].grade;\n  let highest = scores[0].grade;\n  for (let i = 0; i < scores.length; i++) {\n    if (scores[i].grade < lowest) {\n      lowest = scores[i].grade;\n    }\n\n    if (scores[i].grade > highest) {\n      highest = scores[i].grade;\n    }\n\n    count += scores[i].grade;\n  }\n\n  return {\n    min: lowest,\n    max: highest,\n    mean: Math.round(count / scores.length),\n  }\n};\n\nexport class Stats extends React.Component {\n  static displayName = 'src/components/Stats';\n\n  static propTypes = {\n    entries: PropTypes.object.isRequired,\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const scores = Object.values(props.entries);\n    if (scores.length) {\n      return {\n        ...state,\n        ...getComputedStats(scores)\n      }\n    }\n\n    return null;\n  }\n\n  state = {\n    min: 0,\n    max: 0,\n    mean: 0,\n  };\n\n  render() {\n    return (\n      <div className=\"stats-container\">\n        <p>Class Average: {this.state.mean}</p>\n        <p>Lowest Score: {this.state.min}</p>\n        <p>Highest Score: {this.state.max}</p>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  entries: state.examEntries,\n}))(Stats);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './EditModal.css';\nimport { closeEdit } from '../actions/examEntry';\n\nexport class EditModal extends Component {\n\n  static displayName = 'app/src/components/EditModal';\n\n  static propTypes = {\n    isOpen: PropTypes.bool,\n    id: PropTypes.number,\n    gradeToEdit: PropTypes.string,\n  };\n\n  render() {\n    if (!this.props.isOpen) {\n      return null;\n    }\n    return (\n      <div className=\"edit-modal\">\n        <p>Edit the following Exam:</p>\n        <input\n          className=\"grade-input\"\n          type=\"number\"\n          min=\"0\"\n          max=\"100\"\n          placeholder={this.props.gradeToEdit}\n        />\n        <button>Save</button>\n        <button>Close</button>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  isOpen: state.examEntries.edit.isOpen,\n  gradeToEdit: state.examEntries.edit.entry.grade,\n  id: state.examEntries.edit.entry.id,\n}), ({\n  dispatchCloseModal: closeEdit,\n}))(EditModal);\n\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport StudentInput from '../src/components/StudentInput';\nimport EntryList from '../src/components/EntryList';\nimport Stats from '../src/components/Stats';\nimport EditModal from './components/EditModal';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n          <p className=\"greeting\">Welcome! Enter Grades Below.</p>\n        </header>\n        <StudentInput />\n        <EditModal/>\n        <EntryList />\n        <Stats />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '../src/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore({});\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\nexport function configureStore(initialState = {}) {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n}\n"],"sourceRoot":""}